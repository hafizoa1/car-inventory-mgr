openapi: 3.0.0
info:
  title: Car Inventory Management API
  description: API for managing vehicle inventory and AutoTrader integration
  version: 1.0.0

servers:
  - url: http://localhost:8080/api/v1
    description: Local development server

tags:
  - name: Vehicles
    description: Vehicle management operations
  - name: AutoTrader
    description: AutoTrader integration operations
  - name: Sync
    description: Synchronization status operations

paths:
  /vehicles:
    post:
      tags:
        - Vehicles
      summary: Create a new vehicle
      description: Add a new vehicle to the local inventory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleRequest'
      responses:
        '201':
          description: Vehicle created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        '400':
          description: Invalid input
        '409':
          description: Vehicle with VIN already exists

    get:
      tags:
        - Vehicles
      summary: List all vehicles
      description: Retrieve all vehicles in the inventory
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [AVAILABLE, SOLD, RESERVED]
        - name: syncStatus
          in: query
          schema:
            type: string
            enum: [PENDING, PROCESSING, SYNCED, FAILED]
      responses:
        '200':
          description: List of vehicles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vehicle'

  /vehicles/{id}:
    get:
      tags:
        - Vehicles
      summary: Get vehicle by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Vehicle details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        '404':
          description: Vehicle not found

    put:
      tags:
        - Vehicles
      summary: Update vehicle
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleRequest'
      responses:
        '200':
          description: Vehicle updated
        '404':
          description: Vehicle not found

  /vehicles/{id}/sync-status:
    get:
      tags:
        - Sync
      summary: Get vehicle sync status
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Sync status details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncStatus'

    post:
      tags:
        - Sync
      summary: Trigger sync for vehicle
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '202':
          description: Sync initiated
        '404':
          description: Vehicle not found

components:
  schemas:
    Vehicle:
      type: object
      properties:
        id:
          type: string
          format: uuid
        vin:
          type: string
        make:
          type: string
        model:
          type: string
        year:
          type: integer
        price:
          type: number
          format: double
        status:
          type: string
          enum: [AVAILABLE, SOLD, RESERVED]
        syncStatus:
          type: string
          enum: [PENDING, PROCESSING, SYNCED, FAILED]
        autoTraderListingId:
          type: string
        lastSyncAttempt:
          type: string
          format: date-time
        syncError:
          type: string

    VehicleRequest:
      type: object
      required:
        - vin
        - make
        - model
        - year
        - price
      properties:
        vin:
          type: string
        make:
          type: string
        model:
          type: string
        year:
          type: integer
        price:
          type: number
          format: double
        status:
          type: string
          enum: [AVAILABLE, SOLD, RESERVED]
          default: AVAILABLE

    SyncStatus:
      type: object
      properties:
        status:
          type: string
          enum: [PENDING, PROCESSING, SYNCED, FAILED]
        lastSyncAttempt:
          type: string
          format: date-time
        autoTraderListingId:
          type: string
        error:
          type: string